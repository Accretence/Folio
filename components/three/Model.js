/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { Suspense, useRef } from 'react'
import {
    ContactShadows,
    Environment,
    OrbitControls,
    useGLTF,
} from '@react-three/drei'
import { useTheme } from '@geist-ui/core'
import { Canvas } from '@react-three/fiber'
import { getPhysicalMaterial } from './getMaterial'

const Model = () => {
    const theme = useTheme()

    return (
        <>
            <Canvas shadows camera={{ position: [10, 10, 10], zoom: 1 }}>
                <color attach="background" args={[theme.palette.background]} />
                <Suspense fallback={null}>
                    <Scene
                        metalSmartMaterial={
                            theme.type == 'light'
                                ? getPhysicalMaterial('White', 0.5)
                                : getPhysicalMaterial('Black', 0.5)
                        }
                    />
                    <Environment preset="sunset" />
                    <ContactShadows
                        position={[0, -0.8, 0]}
                        opacity={0.25}
                        scale={10}
                        blur={1.5}
                        far={0.8}
                    />

                    <directionalLight position={[2.5, 8, 5]} intensity={0.5} />
                </Suspense>
                <OrbitControls
                    enablePan={false}
                    minPolarAngle={Math.PI / 2.5}
                    maxPolarAngle={1.5}
                />
                <gridHelper
                    args={[
                        1000,
                        200,
                        theme.palette.accents_3,
                        theme.palette.accents_2,
                    ]}
                    position={[0, 0, 0]}
                />
                <mesh
                    scale={200}
                    rotation={[-Math.PI / 2, 0, 0]}
                    position={[0, 0, 0]}
                    receiveShadow
                >
                    <planeGeometry />
                    <meshStandardMaterial attach="material" color="white" />
                    <shadowMaterial transparent opacity={0.3} />
                </mesh>
            </Canvas>
        </>
    )
}

function Scene({ metalSmartMaterial }) {
    const group = useRef()
    const glassMaterial = getPhysicalMaterial('Gray', 0.1, 1, 0.1)
    const woodMaterial = getPhysicalMaterial('#99775A', 0.3)
    const { nodes, materials } = useGLTF('../../model.glb')
    const theme = useTheme()

    return (
        <group ref={group} dispose={null}>
            <group scale={0.3}>
                <mesh
                    geometry={nodes.Railing_1.geometry}
                    material={metalSmartMaterial}
                />
                <mesh
                    geometry={nodes.Railing_2.geometry}
                    material={glassMaterial}
                />
            </group>
            <group
                castShadow
                receiveShadow
                position={[-27.78, 0.99, -2.54]}
                rotation={[Math.PI / 2, 0, Math.PI / 2]}
                scale={0.3}
            >
                <mesh
                    geometry={nodes.Vertical_1.geometry}
                    material={metalSmartMaterial}
                />
                <mesh
                    geometry={nodes.Vertical_2.geometry}
                    material={woodMaterial}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Columns.geometry}
                material={metalSmartMaterial}
                scale={0.3}
            />
            <mesh
                castShadow
                geometry={nodes.Beams.geometry}
                material={metalSmartMaterial}
                scale={0.3}
            />
            <group scale={0.3}>
                <mesh
                    receiveShadow
                    geometry={nodes.Floor_1.geometry}
                    material={woodMaterial}
                />
                <mesh
                    receiveShadow
                    geometry={nodes.Floor_2.geometry}
                    material={metalSmartMaterial}
                />
            </group>
            <mesh
                geometry={nodes['Sub-Beam-Large'].geometry}
                material={metalSmartMaterial}
                position={[-70.28, 6.18, -22.76]}
                scale={0.3}
            />
            <mesh
                geometry={nodes['Sub-Beam-Small'].geometry}
                material={metalSmartMaterial}
                position={[-76.55, 6.18, -22.76]}
                scale={0.3}
            />
            <group position={[-75.3, 8.6, -24.33]} scale={0.01}>
                <mesh
                    geometry={nodes.Panel_1.geometry}
                    material={metalSmartMaterial}
                />
                <mesh
                    geometry={nodes.Panel_2.geometry}
                    material={glassMaterial}
                />
            </group>
            <group position={[-5.28, 1.57, -3.72]} scale={0.3}>
                <mesh
                    geometry={nodes.Curtain_1.geometry}
                    material={metalSmartMaterial}
                />
                <mesh
                    geometry={nodes.Curtain_2.geometry}
                    material={glassMaterial}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Ceiling.geometry}
                material={metalSmartMaterial}
                position={[7.07, 6.87, -16.12]}
                scale={[10.14, 0.37, 10.14]}
            />
        </group>
    )
}

useGLTF.preload('../../model.glb')

export default Model
